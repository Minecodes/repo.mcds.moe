import os

start = """
# repo.mcds.moe
This repository is automatically generated by the [repo.mcds.moe](https://github.com/Minecodes/repo.mcds.moe) project.
It contains the packages of [Minecodes](https://mcds.moe).

## Packages
### Arch
"""

arch_x86_64 = os.listdir('/build/public/arch/x86_64/')
arch_aarch64 = os.listdir('/build/public/arch/aarch64/')
arch_armv7 = os.listdir('/build/public/arch/armv7/')
arch_any = os.listdir('/build/public/arch/any/')
arch_x86_64.sort()
arch_aarch64.sort()
arch_armv7.sort()
arch_any.sort()

start += "\n#### x86_64\n"
for file in arch_x86_64:
    if file.endswith('.pkg.tar.zst'):
        start += f"- [{file}](/arch/x86_64/{file})\n"

start += "\n#### aarch64\n"
for file in arch_aarch64:
    if file.endswith('.pkg.tar.zst'):
        start += f"- [{file}](/arch/aarch64/{file})\n"
        
start += "\n#### armv7\n"
for file in arch_armv7:
    if file.endswith('.pkg.tar.zst'):
        start += f"- [{file}](/arch/armv7/{file})\n"
        
start += "\n#### any\n"
for file in arch_any:
    if file.endswith('.pkg.tar.zst'):
        start += f"- [{file}](/arch/any/{file})\n"
        
with open('/build/public/index.md', 'w') as f:
    f.write(start)